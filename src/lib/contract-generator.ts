import { jsPDF } from "jspdf";
import type { FormSubmission } from "@shared/schema";

export async function generateContractPDF(submission: FormSubmission, formTitle: string): Promise<Buffer> {
  const doc = new jsPDF();
  
  // Add title
  doc.setFontSize(20);
  doc.text('Service Agreement', 20, 30);
  
  // Add date
  doc.setFontSize(12);
  doc.text(`Date: ${new Date().toLocaleDateString()}`, 20, 50);
  
  // Client information section
  doc.setFontSize(16);
  doc.text('Client Information:', 20, 70);
  doc.setFontSize(12);
  doc.text(`Name: ${submission.clientName}`, 20, 85);
  doc.text(`Email: ${submission.clientEmail}`, 20, 95);
  doc.text(`Form: ${formTitle}`, 20, 105);
  
  // Project details from form submission
  doc.setFontSize(16);
  doc.text('Project Details:', 20, 125);
  doc.setFontSize(12);
  
  let yPosition = 140;
  const submissionData = submission.submissionData as Record<string, any>;
  
  // Add form responses
  for (const [key, value] of Object.entries(submissionData)) {
    if (key !== 'name' && key !== 'email') {
      const label = key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());
      const text = `${label}: ${typeof value === 'string' ? value : JSON.stringify(value)}`;
      
      // Handle text wrapping
      const lines = doc.splitTextToSize(text, 170);
      for (const line of lines) {
        doc.text(line, 20, yPosition);
        yPosition += 7;
      }
      yPosition += 3;
    }
  }
  
  // Contract terms
  yPosition += 10;
  doc.setFontSize(16);
  doc.text('Terms of Service:', 20, yPosition);
  yPosition += 15;
  
  doc.setFontSize(12);
  const terms = [
    '1. Services will be provided as outlined in the project description above.',
    '2. Payment terms and project timeline will be discussed during the kickoff call.',
    '3. Both parties agree to communicate professionally and in a timely manner.',
    '4. This agreement can be modified only with written consent from both parties.',
    '5. Either party may terminate this agreement with 7 days written notice.',
  ];
  
  for (const term of terms) {
    const lines = doc.splitTextToSize(term, 170);
    for (const line of lines) {
      doc.text(line, 20, yPosition);
      yPosition += 7;
    }
    yPosition += 5;
  }
  
  // Signature section
  yPosition += 20;
  doc.setFontSize(16);
  doc.text('Signatures:', 20, yPosition);
  yPosition += 20;
  
  doc.setFontSize(12);
  doc.text('Client Signature: _________________________', 20, yPosition);
  doc.text(`Date: _____________`, 20, yPosition + 15);
  
  yPosition += 40;
  doc.text('Freelancer Signature: _________________________', 20, yPosition);
  doc.text(`Date: _____________`, 20, yPosition + 15);
  
  // Add footer
  doc.setFontSize(10);
  doc.text('Generated by ClientZap - Professional Client Onboarding', 20, 280);
  
  // Convert to buffer
  const pdfBuffer = Buffer.from(doc.output('arraybuffer'));
  return pdfBuffer;
}
